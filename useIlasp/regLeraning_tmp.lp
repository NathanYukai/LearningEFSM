2 ~ delta(state0,V0,V1,state0,0,0,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,0,0,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,0,1,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,0,1,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,0,2,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,0,2,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,1,0,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,1,0,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,1,1,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,1,1,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,1,2,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state0,1,2,1) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state0,2,0,0) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state0,2,0,1) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state0,2,1,0) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state0,2,1,1) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state0,2,2,0) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state0,2,2,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,0,0,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,0,0,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,0,1,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,0,1,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,0,2,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,0,2,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,1,0,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,1,0,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,1,1,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,1,1,1) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,1,2,0) :- input(V0,V1).
2 ~ delta(state0,V0,V1,state1,1,2,1) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state1,2,0,0) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state1,2,0,1) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state1,2,1,0) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state1,2,1,1) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state1,2,2,0) :- input(V0,V1).
3 ~ delta(state0,V0,V1,state1,2,2,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,0,0,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,0,0,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,0,1,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,0,1,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,0,2,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,0,2,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,1,0,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,1,0,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,1,1,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,1,1,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,1,2,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state0,1,2,1) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state0,2,0,0) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state0,2,0,1) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state0,2,1,0) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state0,2,1,1) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state0,2,2,0) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state0,2,2,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,0,0,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,0,0,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,0,1,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,0,1,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,0,2,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,0,2,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,1,0,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,1,0,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,1,1,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,1,1,1) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,1,2,0) :- input(V0,V1).
2 ~ delta(state1,V0,V1,state1,1,2,1) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state1,2,0,0) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state1,2,0,1) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state1,2,1,0) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state1,2,1,1) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state1,2,2,0) :- input(V0,V1).
3 ~ delta(state1,V0,V1,state1,2,2,1) :- input(V0,V1).



condition(C,0):- C >= 0,C <= 0, input(_,C). 
condition(C,1):- C >= 1,C <= 1, input(_,C). 
condition(C,2):- C >= 0,C <= 1, input(_,C). 


state(state0).
state(state1).

reg(0,state0,0).
reg(0,state1,0).


% Time, state
st(0,state0).

st(T+1,TO):- st(T,FROM),state(FROM),state(TO),delta(FROM,T,C,TO,ID,REG_O,_),condition(C,ID),reg(T,FROM,REG_O).

%update register value
reg(T+1,ST,REG_N):- reg(T,ST,REG_O), st(T,ST), delta(ST,T,_,_,_,REG_O,REG_N).

%other state keep remembering it’s old value, maybe don’t need this part
% if not, for performance reason, need to find a way of getting the closest TIME
reg(T+1,ST_DIFF,REG_O):- reg(T,ST_DIFF,REG_O), st(T,ST), delta(ST,T,_,_,_,_,_), ST != ST_DIFF.

:- st(T,ST),st(T,ST2),ST!=ST2.
:- not st(T,state1), trace_length(T).
:- not reg(T,state1,1), trace_length(T).

#pos(p0,{},{},{input(0,0).input(1,1).input(2,0).input(3,1).trace_length(4).}).
#pos(p1,{},{},{input(0,0).input(1,1).input(2,0).input(3,0).input(4,1).trace_length(5).}).
#pos(p2,{},{},{input(0,0).input(1,1).input(2,1).trace_length(3).}).
#pos(p3,{},{},{input(0,0).input(1,1).input(2,0).input(3,0).input(4,0).input(5,1).trace_length(6).}).

#neg(n0,{},{},{input(0,1).input(1,1).iput(2,1).trace_length(3).}).
#neg(n1,{},{},{input(0,1).input(1,1).iput(2,0).input(3,1).trace_length(4).}).
#neg(n2,{},{},{input(0,1).input(1,1).iput(2,0).input(3,0).input(4,1).trace_length(5).}).
#neg(n3,{},{},{input(0,0).trace_length(1).}).
#neg(n4,{},{},{input(0,1).trace_length(1).}).
#neg(n5,{},{},{input(0,0).input(1,0).trace_length(2).}).
#neg(n6,{},{},{input(0,0).input(1,1).input(2,1).input(3,1).trace_length(4).}).
#neg(n7,{},{},{input(0,0).input(1,1).input(2,1).input(3,0).trace_length(4).}).
#neg(n8,{},{},{input(0,1).input(1,1).trace_length(2).}).
#max_penalty(15).
